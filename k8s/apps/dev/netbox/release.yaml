apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: netbox-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G
  storageClassName: nfs-docker
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: netbox
  labels:
    app: netbox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netbox
  template:
    metadata:
      labels:
        app: netbox
        np-ingress-controller-web: allow
        np-postgres: allow
        np-metrics: allow
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      # TODO: change image to git.REDACTED/droso/netbox
      containers:
        - name: netbox
          image: netboxcommunity/netbox:v3.6
          ports:
            - name: web
              containerPort: 8080
          env:
            - name: DB_WAIT_DEBUG
              value: "1"
          envFrom:
            - secretRef:
                name: netbox-env-config
          volumeMounts:
            - mountPath: /opt/netbox/netbox/media
              name: netbox-data
              readOnly: false
            - mountPath: /etc/netbox/config/extra.py
              subPath: extra.py
              name: netbox-config-extra
              readOnly: true

        - name: netbox-worker
          image: netboxcommunity/netbox:v3.6
          command:
            - /opt/netbox/venv/bin/python
            - /opt/netbox/netbox/manage.py
            - rqworker
          envFrom:
            - secretRef:
                name: netbox-env-config
          volumeMounts:
            - mountPath: /opt/netbox/netbox/media
              name: netbox-data
              readOnly: false
            - mountPath: /etc/netbox/config/extra.py
              subPath: extra.py
              name: netbox-config-extra
              readOnly: true

        - name: redis
          image: redis:alpine
      volumes:
        - name: netbox-data
          persistentVolumeClaim:
            claimName: netbox-data
        - name: netbox-config-extra
          configMap:
            name: netbox-config-extra
---
apiVersion: v1
kind: Service
metadata:
  name: netbox
spec:
  ports:
    - protocol: TCP
      name: web
      port: 8080
  selector:
    app: netbox
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: netbox
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`netbox.REDACTED`)
      kind: Rule
      middlewares:
        - name: forwardauth-authelia
          namespace: auth
      services:
        - name: netbox
          port: 8080
  tls:
    secretName: REDACTED-cert
